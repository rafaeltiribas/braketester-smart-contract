Organizations:

  - &OrdererOrg
    Name: OrderingService
    ID: OrdererMSP
    MSPDir: crypto-config/ordererOrganizations/nmi/msp
    
    Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

    #OrdererEndpoints:
    #        - orderer.nmi:7050

  - &NESA
    Name: NESAMSP
    ID: NESAMSP
    MSPDir: crypto-config/peerOrganizations/nesa.br/msp
    Policies:
          Readers:
              Type: Signature
              Rule: "OR('NESAMSP.admin', 'NESAMSP.peer', 'NESAMSP.client')"
          Writers:
              Type: Signature
              Rule: "OR('NESAMSP.admin', 'NESAMSP.client')"
          Admins:
              Type: Signature
              Rule: "OR('NESAMSP.admin')" 
          Endorsement:
              Type: Signature
              Rule: "OR('NESAMSP.peer')"     

    AnchorPeers:
      - Host: peer0.nesa.br
        Port: 9051

  - &Inmetro
    Name: InmetroMSP
    ID: InmetroMSP
    MSPDir: crypto-config/peerOrganizations/inmetro.br/msp
    Policies:
          Readers:
              Type: Signature
              Rule: "OR('InmetroMSP.admin', 'InmetroMSP.peer', 'InmetroMSP.client')"
          Writers:
              Type: Signature
              Rule: "OR('InmetroMSP.admin', 'InmetroMSP.client')"
          Admins:
              Type: Signature
              Rule: "OR('InmetroMSP.admin')" 
          Endorsement:
              Type: Signature
              Rule: "OR('InmetroMSP.peer')" 

    AnchorPeers:
      - Host: peer0.inmetro.br
        Port: 7051

Capabilities:

    Channel: &ChannelCapabilities

        V2_0: true


    Orderer: &OrdererCapabilities
    
        V2_0: true

    Application: &ApplicationCapabilities

        V2_0: true

            
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    OrdererType: etcdraft
    
    # Addresses used to be the list of orderer addresses that clients and peers
    # could connect to.  However, this does not allow clients to associate orderer
    # addresses and orderer organizations which can be useful for things such
    # as TLS validation.  The preferred way to specify orderer addresses is now
    # to include the OrdererEndpoints item in your org definition
    Addresses:
        - orderer.nmi:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

Channel: &ChannelDefaults

    Policies:

        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"

        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"


    Capabilities:
        <<: *ChannelCapabilities
# Application

Application: &ApplicationDefaults

    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "ANY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "ANY Endorsement"

    Capabilities:
        <<: *ApplicationCapabilities

Profiles:
    NMIGenesis:
      <<: *ChannelDefaults
      Capabilities:
        <<: *ChannelCapabilities
      Orderer:
          <<: *OrdererDefaults
          OrdererType: etcdraft
          EtcdRaft:
              Consenters:
              - Host: orderer.nmi
                Port: 7050
                ClientTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer.nmi/tls/server.crt
                ServerTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer.nmi/tls/server.crt
              - Host: orderer2.nmi
                Port: 8050
                ClientTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer2.nmi/tls/server.crt
                ServerTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer2.nmi/tls/server.crt
              - Host: orderer3.nmi
                Port: 9050
                ClientTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer3.nmi/tls/server.crt
                ServerTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer3.nmi/tls/server.crt
              - Host: orderer4.nmi
                Port: 10050
                ClientTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer4.nmi/tls/server.crt
                ServerTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer4.nmi/tls/server.crt
              - Host: orderer5.nmi
                Port: 11050
                ClientTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer5.nmi/tls/server.crt
                ServerTLSCert: crypto-config/ordererOrganizations/nmi/orderers/orderer5.nmi/tls/server.crt
          Addresses:
              - orderer.nmi:7050
              - orderer2.nmi:8050
              - orderer3.nmi:9050
              - orderer4.nmi:10050
              - orderer5.nmi:11050
          Organizations:
          - *OrdererOrg
          Capabilities:
              <<: *OrdererCapabilities
      Application:
            <<: *ApplicationDefaults
            Organizations:
            - <<: *OrdererOrg
      Consortiums:
        MyFirstConsortium:
          Organizations:
            - *Inmetro
            - *NESA
            
    NMIChannel:
      Consortium: MyFirstConsortium
      <<: *ChannelDefaults
      Application:
        <<: *ApplicationDefaults
        Organizations:
          - *Inmetro
          - *NESA
          
        Capabilities:
          <<: *ApplicationCapabilities

